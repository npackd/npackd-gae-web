<?xml version="1.0" encoding="utf-8"?>
<appengine-web-app xmlns="http://appengine.google.com/ns/1.0">
    <application>npackd</application>
    <version>${project.version}</version>

    <!-- too expensive
    <instance-class>F2</instance-class>
    -->

    <runtime>java8</runtime>

    <!--
    Allows App Engine to send multiple requests to one instance in parallel:
    -->
    <threadsafe>true</threadsafe>
    
    <automatic-scaling>
        <max-instances>1</max-instances>
        <max-concurrent-requests>100</max-concurrent-requests>
    </automatic-scaling>

    <!-- Configure java.util.logging -->
    <system-properties>
        <property name="java.util.logging.config.file" value="logging.properties"/>
    </system-properties>


    <static-files>
      <include path="/**" expiration="4d 5h" />
    </static-files>

<!--
    HTTP Sessions are disabled by default. To enable HTTP sessions specify:

      <sessions-enabled>true</sessions-enabled>

    It's possible to reduce request latency by configuring your application to
    asynchronously write HTTP session data to the datastore:

      <async-session-persistence enabled="true" />

      With this feature enabled, there is a very small chance your app will see
      stale session data. For details, see
      https://cloud.google.com/appengine/docs/standard/java/config/appref?csw=1#Enabling_Sessions
    -->
    
    <!-- see https://cloud.google.com/profiler/docs/profiling-java -->
    <env-variables>
        <env-var name="GAE_PROFILER_MODE" value="cpu,heap" />
    </env-variables>
</appengine-web-app>
